// web-server.js - –ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Tauri (ES modules)

import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = 3000;

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('src'));
app.use(express.json());

// –ò–º–∏—Ç–∞—Ü–∏—è Tauri API
let currentUser = null;
let isAuthenticated = false;

const users = {
    'admin': { login: 'admin', role: 'Admin', password: 'admin123' },
    'operator1': { login: 'operator1', role: 'Operator', password: 'operator123' }
};

const testConfig = {
    apartments: [
        { id: 1, apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ü—É—à–∫–∏–Ω–∞", apartment_number: "12–ê" },
        { id: 2, apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –õ–µ–Ω–∏–Ω–∞", apartment_number: "34–ë" },
        { id: 3, apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –°–æ–≤–µ—Ç—Å–∫–æ–π", apartment_number: "56–í" }
    ],
    cameras: [
        { id: 1, camera_name: "–ü—Ä–∏—Ö–æ–∂–∞—è", apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ü—É—à–∫–∏–Ω–∞", rtsp_link: "rtsp://192.168.1.100:554/stream1", enabled: true },
        { id: 2, camera_name: "–ì–æ—Å—Ç–∏–Ω–∞—è", apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ü—É—à–∫–∏–Ω–∞", rtsp_link: "rtsp://192.168.1.101:554/stream1", enabled: true },
        { id: 3, camera_name: "–ö—É—Ö–Ω—è", apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ü—É—à–∫–∏–Ω–∞", rtsp_link: "rtsp://192.168.1.102:554/stream1", enabled: true },
        { id: 4, camera_name: "–°–ø–∞–ª—å–Ω—è", apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –õ–µ–Ω–∏–Ω–∞", rtsp_link: "rtsp://192.168.1.200:554/stream1", enabled: true },
        { id: 5, camera_name: "–ë–∞–ª–∫–æ–Ω", apartment_name: "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –õ–µ–Ω–∏–Ω–∞", rtsp_link: "rtsp://192.168.1.201:554/stream1", enabled: true }
    ]
};

// API endpoints
app.post('/api/login', (req, res) => {
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', req.body);
    const { login, password } = req.body;
    const user = users[login];
    
    if (user && user.password === password) {
        currentUser = user;
        isAuthenticated = true;
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', login);
        res.json({
            success: true,
            user: { login: user.login, role: user.role },
            message: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
        });
    } else {
        console.log('‚ùå –ù–µ—É–¥–∞—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', login);
        res.json({
            success: false,
            user: null,
            message: "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å"
        });
    }
});

app.post('/api/logout', (req, res) => {
    console.log('üö™ –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser?.login);
    currentUser = null;
    isAuthenticated = false;
    res.json({ success: true });
});

app.get('/api/current-user', (req, res) => {
    res.json(currentUser);
});

app.get('/api/check-auth', (req, res) => {
    res.json(isAuthenticated);
});

app.get('/api/system-status', (req, res) => {
    const status = {
        is_authenticated: isAuthenticated,
        current_user: currentUser?.login,
        user_role: currentUser?.role,
        config_loaded: true,
        apartments_count: testConfig.apartments.length,
        cameras_count: testConfig.cameras.length
    };
    console.log('üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:', status);
    res.json(status);
});

app.get('/api/apartments', (req, res) => {
    console.log('üè† –ó–∞–ø—Ä–æ—Å –∫–≤–∞—Ä—Ç–∏—Ä');
    res.json(testConfig.apartments);
});

app.get('/api/cameras', (req, res) => {
    console.log('üìπ –ó–∞–ø—Ä–æ—Å –∫–∞–º–µ—Ä');
    res.json(testConfig.cameras);
});

app.get('/api/greet/:name', (req, res) => {
    const message = `–ü—Ä–∏–≤–µ—Ç, ${req.params.name}! –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç.`;
    console.log('üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:', message);
    res.json(message);
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≤–µ–±-–≤–µ—Ä—Å–∏—é
app.get('/', (req, res) => {
    const htmlPath = path.join(__dirname, 'src', 'index-web.html');
    console.log('üåê –ó–∞–ø—Ä–æ—Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', htmlPath);
    res.sendFile(htmlPath);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log('üöÄ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:' + PORT);
    console.log('üìÇ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏: src/');
    console.log('');
    console.log('üë• –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
    console.log('   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123');
    console.log('   –û–ø–µ—Ä–∞—Ç–æ—Ä: operator1 / operator123');
    console.log('');
    console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:' + PORT);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
});

// 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use((req, res) => {
    console.log('‚ùì 404:', req.url);
    res.status(404).json({ error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});
