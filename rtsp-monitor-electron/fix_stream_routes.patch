--- autonomous-server.js.orig
+++ autonomous-server.js
@@ -300,6 +300,45 @@
     async handleStreamRequest(req, res, pathname) {
         try {
+            // –û–±—Ä–∞–±–æ—Ç–∫–∞ HLS –ø–æ—Ç–æ–∫–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
+            const streamMatch = pathname.match(/^\/stream\/([^\/]+)\/(.*)/);
+            if (streamMatch) {
+                const streamId = streamMatch[1];
+                const fileName = streamMatch[2];
+                
+                // –ü—É—Ç—å –∫ HLS —Ñ–∞–π–ª–∞–º
+                const hlsPath = path.join(__dirname, 'temp_streams', streamId, fileName);
+                
+                console.log(`üì° HLS –∑–∞–ø—Ä–æ—Å: ${streamId}/${fileName} -> ${hlsPath}`);
+                
+                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
+                if (!fs.existsSync(hlsPath)) {
+                    console.log(`‚ùå HLS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${hlsPath}`);
+                    this.send404(res);
+                    return;
+                }
+                
+                // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ MIME —Ç–∏–ø–∞
+                const ext = path.extname(fileName).toLowerCase();
+                const mimeTypes = {
+                    '.m3u8': 'application/vnd.apple.mpegurl',
+                    '.ts': 'video/mp2t'
+                };
+                
+                const contentType = mimeTypes[ext] || 'application/octet-stream';
+                
+                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
+                const stream = fs.createReadStream(hlsPath);
+                res.writeHead(200, {
+                    'Content-Type': contentType,
+                    'Cache-Control': 'no-cache',
+                    'Access-Control-Allow-Origin': '*'
+                });
+                
+                stream.pipe(res);
+                return;
+            }
+            
             // –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ RTSP –º–µ–Ω–µ–¥–∂–µ—Ä—É
             const streamPath = pathname.replace('/stream/', '');
             
