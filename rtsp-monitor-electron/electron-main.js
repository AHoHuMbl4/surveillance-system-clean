const { app, BrowserWindow, ipcMain } = require('electron');
const path = require('path');
const { spawn } = require('child_process');

let mainWindow;
let serverProcess;

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
function createWindow() {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ Electron...');
    
    mainWindow = new BrowserWindow({
        width: 1400,
        height: 900,
        webPreferences: {
            nodeIntegration: false,
            contextIsolation: true,
            enableRemoteModule: false,
            webSecurity: false, // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö HLS –ø–æ—Ç–æ–∫–æ–≤
            allowRunningInsecureContent: true
        },
        icon: path.join(__dirname, 'icon.png'),
        title: 'üé• RTSP Monitor - –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
        show: false,
        autoHideMenuBar: true
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    mainWindow.once('ready-to-show', () => {
        mainWindow.show();
        console.log('‚úÖ –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ');
        
        // DevTools –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
        if (process.env.NODE_ENV === 'development') {
            mainWindow.webContents.openDevTools();
        }
    });

    mainWindow.on('closed', () => {
        mainWindow = null;
        stopServer();
    });

    return mainWindow;
}

// –ó–∞–ø—É—Å–∫ Node.js —Å–µ—Ä–≤–µ—Ä–∞
function startServer() {
    console.log('üåê –ó–∞–ø—É—Å–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ RTSP —Å–µ—Ä–≤–µ—Ä–∞...');
    
    try {
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
        serverProcess = spawn('node', ['rtsp-server.mjs'], {
            cwd: __dirname,
            stdio: ['pipe', 'pipe', 'pipe']
        });

        serverProcess.stdout.on('data', (data) => {
            console.log(`Server: ${data.toString().trim()}`);
        });

        serverProcess.stderr.on('data', (data) => {
            console.error(`Server Error: ${data.toString().trim()}`);
        });

        serverProcess.on('close', (code) => {
            console.log(`üõë –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
        });

        serverProcess.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        });

        // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        setTimeout(() => {
            const serverUrl = 'http://localhost:3000';
            console.log(`üì± –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: ${serverUrl}`);
            
            mainWindow.loadURL(serverUrl).catch(error => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
                
                // Fallback: –∑–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π index.html
                const fallbackPath = path.join(__dirname, 'index.html');
                console.log(`üîÑ Fallback: –∑–∞–≥—Ä—É–∑–∫–∞ ${fallbackPath}`);
                mainWindow.loadFile(fallbackPath);
            });
        }, 3000);

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        
        // Fallback: –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const fallbackPath = path.join(__dirname, 'index.html');
        console.log(`üîÑ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π Fallback: –∑–∞–≥—Ä—É–∑–∫–∞ ${fallbackPath}`);
        mainWindow.loadFile(fallbackPath);
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
function stopServer() {
    if (serverProcess) {
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ RTSP —Å–µ—Ä–≤–µ—Ä–∞...');
        serverProcess.kill('SIGTERM');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (serverProcess && !serverProcess.killed) {
                serverProcess.kill('SIGKILL');
            }
        }, 5000);
        
        serverProcess = null;
    }
}

// –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.whenReady().then(() => {
    console.log('üé• RTSP Monitor Electron –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
    
    createWindow();
    startServer();

    app.on('activate', () => {
        if (BrowserWindow.getAllWindows().length === 0) {
            createWindow();
        }
    });
});

app.on('window-all-closed', () => {
    console.log('üõë –í—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    stopServer();
    
    if (process.platform !== 'darwin') {
        app.quit();
    }
});

app.on('before-quit', () => {
    console.log('üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è...');
    stopServer();
});

// IPC –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å renderer –ø—Ä–æ—Ü–µ—Å—Å–æ–º
ipcMain.handle('get-app-version', () => {
    return app.getVersion();
});

ipcMain.handle('minimize-window', () => {
    if (mainWindow) {
        mainWindow.minimize();
    }
});

ipcMain.handle('maximize-window', () => {
    if (mainWindow) {
        mainWindow.isMaximized() ? mainWindow.unmaximize() : mainWindow.maximize();
    }
});

ipcMain.handle('close-window', () => {
    if (mainWindow) {
        mainWindow.close();
    }
});

console.log('‚úÖ Electron main –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
