<<<<<<< HEAD
const { app, BrowserWindow, ipcMain, Menu } = require('electron');
=======
const { app, BrowserWindow, Menu } = require('electron');
>>>>>>> 9b806b3 (pre)
const path = require('path');
const { spawn } = require('child_process');

let mainWindow;
let serverProcess;

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
function createWindow() {
<<<<<<< HEAD
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ Electron...');
=======
    console.log('üé• –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ RTSP Monitor');
>>>>>>> 9b806b3 (pre)
    
    mainWindow = new BrowserWindow({
        width: 1920,
        height: 1080,
        minWidth: 1280,
        minHeight: 720,
        webPreferences: {
            nodeIntegration: false,
            contextIsolation: true,
<<<<<<< HEAD
            enableRemoteModule: false,
            webSecurity: false, // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö HLS –ø–æ—Ç–æ–∫–æ–≤
            allowRunningInsecureContent: true
        },
        icon: path.join(__dirname, 'icon.png'),
        title: 'üé• RTSP Monitor - –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
        show: false,
        autoHideMenuBar: false // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ DevTools
    });

    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç—å DevTools
    const template = [
        {
            label: '–§–∞–π–ª',
            submenu: [
                {
                    label: '–í—ã—Ö–æ–¥',
                    accelerator: 'CmdOrCtrl+Q',
                    click: () => {
                        app.quit();
                    }
                }
            ]
        },
        {
            label: '–í–∏–¥',
            submenu: [
                {
                    label: '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å',
                    accelerator: 'CmdOrCtrl+R',
                    click: () => {
                        mainWindow.webContents.reload();
                    }
                },
                {
                    label: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞',
                    accelerator: 'F12',
                    click: () => {
                        mainWindow.webContents.openDevTools();
                    }
                },
                {
                    type: 'separator'
                },
                {
                    label: '–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
                    accelerator: 'F11',
                    click: () => {
                        mainWindow.setFullScreen(!mainWindow.isFullScreen());
                    }
                }
            ]
        },
        {
            label: '–ü–æ–º–æ—â—å',
            submenu: [
                {
                    label: '–û –ø—Ä–æ–≥—Ä–∞–º–º–µ',
                    click: () => {
                        console.log('RTSP Monitor v1.0.0');
                    }
                }
            ]
        }
    ];

    const menu = Menu.buildFromTemplate(template);
    Menu.setApplicationMenu(menu);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º DevTools –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    mainWindow.webContents.openDevTools();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    mainWindow.once('ready-to-show', () => {
        mainWindow.show();
        console.log('‚úÖ –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
    mainWindow.webContents.on('before-input-event', (event, input) => {
        // F12 –¥–ª—è DevTools
        if (input.key === 'F12') {
            mainWindow.webContents.openDevTools();
        }
        // Ctrl+Shift+I –¥–ª—è DevTools
        if (input.control && input.shift && input.key.toLowerCase() === 'i') {
=======
            webSecurity: false,
            cache: false  // –û–¢–ö–õ–Æ–ß–ê–ï–ú –ö–ï–®–ò–†–û–í–ê–ù–ò–ï
        },
        icon: path.join(__dirname, 'assets', 'icon.png'),
        title: 'RTSP Monitor - –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
        show: false,
        frame: true,
        titleBarStyle: 'default'
    });

    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–ï–®–ê
    mainWindow.webContents.session.clearCache().then(() => {
        console.log('‚úÖ –ö–µ—à –æ—á–∏—â–µ–Ω');
        
        // –ó–ê–ì–†–£–ñ–ê–ï–ú –°–¢–†–ê–ù–ò–¶–£ –° –û–¢–ö–õ–Æ–ß–ï–ù–ù–´–ú –ö–ï–®–ï–ú
        mainWindow.loadURL('http://localhost:3000', {
            extraHeaders: 'Cache-Control: no-cache, no-store, must-revalidate\nPragma: no-cache\nExpires: 0'
        });
    });

    // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –≤ production
    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'production') {
        Menu.setApplicationMenu(null);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤–æ
    mainWindow.once('ready-to-show', () => {
        console.log('‚úÖ –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –≥–æ—Ç–æ–≤–æ –∫ –ø–æ–∫–∞–∑—É');
        mainWindow.show();
        
        // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º DevTools
        if (process.env.NODE_ENV === 'development') {
>>>>>>> 9b806b3 (pre)
            mainWindow.webContents.openDevTools();
        }
    });

<<<<<<< HEAD
    mainWindow.on('closed', () => {
        mainWindow = null;
        stopServer();
    });

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∑–∞–≥—Ä—É–∑–∫–∏
    mainWindow.webContents.on('did-finish-load', () => {
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    });

    mainWindow.webContents.on('did-fail-load', (event, errorCode, errorDescription) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', errorDescription);
    });

    mainWindow.webContents.on('console-message', (event, level, message, line, sourceId) => {
        console.log(`[Renderer] ${message}`);
    });

    return mainWindow;
}

// –ó–∞–ø—É—Å–∫ Node.js —Å–µ—Ä–≤–µ—Ä–∞
function startServer() {
    console.log('üåê –ó–∞–ø—É—Å–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ RTSP —Å–µ—Ä–≤–µ—Ä–∞...');
    
    try {
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
        serverProcess = spawn('node', ['rtsp-server.mjs'], {
            cwd: __dirname,
            stdio: ['pipe', 'pipe', 'pipe']
        });

        serverProcess.stdout.on('data', (data) => {
            console.log(`Server: ${data.toString().trim()}`);
        });

        serverProcess.stderr.on('data', (data) => {
            console.error(`Server Error: ${data.toString().trim()}`);
        });

        serverProcess.on('close', (code) => {
            console.log(`üõë –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
        });

        serverProcess.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        });

        // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        setTimeout(() => {
            const serverUrl = 'http://localhost:3000';
            console.log(`üì± –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: ${serverUrl}`);
            
            mainWindow.loadURL(serverUrl).catch(error => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
                
                // Fallback: –∑–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π index.html
                const fallbackPath = path.join(__dirname, 'index.html');
                console.log(`üîÑ Fallback: –∑–∞–≥—Ä—É–∑–∫–∞ ${fallbackPath}`);
                mainWindow.loadFile(fallbackPath);
            });
        }, 3000);

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        
        // Fallback: –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const fallbackPath = path.join(__dirname, 'index.html');
        console.log(`üîÑ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π Fallback: –∑–∞–≥—Ä—É–∑–∫–∞ ${fallbackPath}`);
        mainWindow.loadFile(fallbackPath);
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
function stopServer() {
    if (serverProcess) {
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ RTSP —Å–µ—Ä–≤–µ—Ä–∞...');
        serverProcess.kill('SIGTERM');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (serverProcess && !serverProcess.killed) {
                serverProcess.kill('SIGKILL');
            }
        }, 5000);
        
        serverProcess = null;
    }
}

// –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.whenReady().then(() => {
    console.log('üé• RTSP Monitor Electron –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
    
    createWindow();
    startServer();
=======
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    mainWindow.on('closed', () => {
        console.log('üîå –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
        mainWindow = null;
    });

    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –ü–†–ò –û–®–ò–ë–ö–ê–•
    mainWindow.webContents.on('did-fail-load', (event, errorCode, errorDescription) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', errorCode, errorDescription);
        
        if (errorCode === -102) { // CONNECTION_REFUSED
            console.log('üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
            setTimeout(() => {
                // –û–ß–ò–©–ê–ï–ú –ö–ï–®–ò–†–û–í–ê–ù–ò–ï –ò –ü–ï–†–ï–ó–ê–ì–†–£–ñ–ê–ï–ú
                mainWindow.webContents.session.clearCache().then(() => {
                    mainWindow.webContents.reloadIgnoringCache();
                });
            }, 2000);
        }
    });

    console.log('üéØ –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ');
}

function startServer() {
    console.log('üåê –ó–∞–ø—É—Å–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ RTSP —Å–µ—Ä–≤–µ—Ä–∞...');
    
    const serverScript = path.join(__dirname, 'rtsp-server.js');
    
    if (!require('fs').existsSync(serverScript)) {
        console.error('‚ùå –§–∞–π–ª rtsp-server.js –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    serverProcess = spawn('node', [serverScript], {
        cwd: __dirname,
        stdio: ['pipe', 'pipe', 'pipe']
    });

    serverProcess.stdout.on('data', (data) => {
        const output = data.toString().trim();
        if (output) {
            console.log('üåê [Server]:', output);
        }
    });

    serverProcess.stderr.on('data', (data) => {
        const output = data.toString().trim();
        if (output) {
            console.error('üåê [Server Error]:', output);
        }
    });

    serverProcess.on('close', (code) => {
        console.log(`üåê –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
        serverProcess = null;
    });

    serverProcess.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    });

    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
}

function stopServer() {
    if (serverProcess) {
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');
        serverProcess.kill('SIGTERM');
        
        setTimeout(() => {
            if (serverProcess) {
                serverProcess.kill('SIGKILL');
            }
        }, 5000);
    }
}

// –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.whenReady().then(() => {
    console.log('üöÄ Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    startServer();
    
    // –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è, –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ
    setTimeout(() => {
        createWindow();
    }, 2000);
>>>>>>> 9b806b3 (pre)

    app.on('activate', () => {
        if (BrowserWindow.getAllWindows().length === 0) {
            createWindow();
        }
    });
});

app.on('window-all-closed', () => {
<<<<<<< HEAD
    console.log('üõë –í—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
=======
    console.log('üîå –í—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');
>>>>>>> 9b806b3 (pre)
    stopServer();
    
    if (process.platform !== 'darwin') {
        app.quit();
    }
});

<<<<<<< HEAD
app.on('before-quit', () => {
    console.log('üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è...');
    stopServer();
});

// IPC –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å renderer –ø—Ä–æ—Ü–µ—Å—Å–æ–º
ipcMain.handle('get-app-version', () => {
    return app.getVersion();
});

ipcMain.handle('minimize-window', () => {
    if (mainWindow) {
        mainWindow.minimize();
    }
});

ipcMain.handle('maximize-window', () => {
    if (mainWindow) {
        mainWindow.isMaximized() ? mainWindow.unmaximize() : mainWindow.maximize();
    }
});

ipcMain.handle('close-window', () => {
    if (mainWindow) {
        mainWindow.close();
    }
});

console.log('‚úÖ Electron main –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
=======
app.on('before-quit', (event) => {
    console.log('üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    stopServer();
});

// –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
app.whenReady().then(() => {
    const { globalShortcut } = require('electron');
    
    // F5 - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞
    globalShortcut.register('F5', () => {
        if (mainWindow) {
            console.log('üîÑ F5: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞');
            mainWindow.webContents.session.clearCache().then(() => {
                mainWindow.webContents.reloadIgnoringCache();
            });
        }
    });
    
    // Ctrl+R - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞
    globalShortcut.register('CommandOrControl+R', () => {
        if (mainWindow) {
            console.log('üîÑ Ctrl+R: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞');
            mainWindow.webContents.session.clearCache().then(() => {
                mainWindow.webContents.reloadIgnoringCache();
            });
        }
    });
});

process.on('uncaughtException', (error) => {
    console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});

process.on('unhandledRejection', (reason, promise) => {
    console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
});

console.log('üé• RTSP Monitor Electron - –° –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞');
>>>>>>> 9b806b3 (pre)
