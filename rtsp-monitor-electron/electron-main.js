const { app, BrowserWindow, Menu, Tray } = require('electron');
const { spawn } = require('child_process');
const path = require('path');

let mainWindow;
let serverProcess;
let tray;

function createWindow() {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞...');
    
    mainWindow = new BrowserWindow({
        width: 1400,
        height: 900,
        webPreferences: {
            nodeIntegration: false,
            contextIsolation: true,
            webSecurity: false
        },
        title: 'RTSP Monitor - –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
        show: false
    });

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    startServer();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        console.log('üåê –ó–∞–≥—Ä—É–∑–∫–∞ http://localhost:3000');
        mainWindow.loadURL('http://localhost:3000');
        mainWindow.show();
    }, 3000);

    mainWindow.on('close', (event) => {
        if (!app.isQuiting) {
            event.preventDefault();
            mainWindow.hide();
        }
    });

    mainWindow.webContents.on('did-finish-load', () => {
        console.log('‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    });

    mainWindow.webContents.on('did-fail-load', (event, errorCode, errorDescription, validatedURL) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', errorDescription);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –æ–∫–Ω–µ
        const errorHtml = `
        <html>
        <body style="font-family: Arial; text-align: center; padding: 50px;">
            <h1 style="color: #e74c3c;">‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h1>
            <p>–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É</p>
            <p><strong>–û—à–∏–±–∫–∞:</strong> ${errorDescription}</p>
            <button onclick="location.reload()" style="padding: 10px 20px; font-size: 16px;">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
        </body>
        </html>`;
        
        mainWindow.loadURL('data:text/html;charset=utf-8,' + encodeURIComponent(errorHtml));
    });
}

function startServer() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');
    
    const serverPath = path.join(__dirname, 'rtsp-server.js');
    
    serverProcess = spawn('node', [serverPath], {
        stdio: ['pipe', 'pipe', 'pipe'],
        env: {
            ...process.env,
            NODE_ENV: 'production'
        }
    });

    serverProcess.stdout.on('data', (data) => {
        console.log('üìä Server:', data.toString().trim());
    });

    serverProcess.stderr.on('data', (data) => {
        console.error('‚ùå Server Error:', data.toString().trim());
    });

    serverProcess.on('close', (code) => {
        console.log(`üõë –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
    });

    serverProcess.on('error', (error) => {
        console.error('üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    });
}

function createTray() {
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç—Ä–µ–π –±–µ–∑ –∏–∫–æ–Ω–∫–∏
    try {
        const Menu = require('electron').Menu;
        
        const contextMenu = Menu.buildFromTemplate([
            {
                label: '–ü–æ–∫–∞–∑–∞—Ç—å RTSP Monitor',
                click: () => {
                    mainWindow.show();
                }
            },
            {
                label: '–í—ã—Ö–æ–¥',
                click: () => {
                    app.isQuiting = true;
                    if (serverProcess) {
                        serverProcess.kill();
                    }
                    app.quit();
                }
            }
        ]);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ —Ç—Ä–µ—è (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        Menu.setApplicationMenu(contextMenu);
        console.log('üìã –ú–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–æ');
        
    } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç—Ä–µ–π:', error.message);
    }
}

app.whenReady().then(() => {
    console.log('‚ö° Electron –≥–æ—Ç–æ–≤');
    createWindow();
    createTray();
});

app.on('window-all-closed', () => {
    // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é
});

app.on('activate', () => {
    if (BrowserWindow.getAllWindows().length === 0) {
        createWindow();
    }
});

app.on('before-quit', () => {
    app.isQuiting = true;
    if (serverProcess) {
        serverProcess.kill();
    }
});

console.log('üöÄ RTSP Monitor Electron Main –∑–∞–≥—Ä—É–∂–µ–Ω');
